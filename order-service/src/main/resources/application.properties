product.service.url=http://localhost:8091/product/
user.service.url=http://localhost:8092/user

server.port=8093

spring.application.name=orders
spring.profiles.active=default
spring.config.import=optional:configserver:http://localhost:8071

management.endpoints.web.exposure.include=*
management.info.env.enabled=true

##Configuring info endpoint
info.app.name=Orders Microservice
info.app.description=Jake App Orders Application
info.app.version=1.0.0

resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.orderCustomSupportApp.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.orderCustomSupportApp.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.orderCustomSupportApp.waitDurationInOpenState= 15000
resilience4j.circuitbreaker.instances.orderCustomSupportApp.permittedNumberOfCallsInHalfOpenState= 2

resilience4j.ratelimiter.configs.default.registerHealthIndicator=true
resilience4j.ratelimiter.instances.sayHello.timeoutDuration= 5000
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod= 5000
resilience4j.ratelimiter.instances.sayHello.limitForPeriod= 2

# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
